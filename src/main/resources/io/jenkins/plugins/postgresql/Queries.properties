# The MIT License
#
# Copyright (c) 2020, Jenkins Project Contributors.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

create_fingerprint_table = CREATE TABLE FINGERPRINT \
  (FINGERPRINT_ID  VARCHAR(50)   NOT NULL, \
   INSTANCE_ID     VARCHAR(50)   NOT NULL, \
   TIMESTAMP       VARCHAR(50)   NOT NULL, \
   FILENAME        VARCHAR(50)   NOT NULL, \
   PRIMARY KEY(FINGERPRINT_ID, INSTANCE_ID));

create_fingerprint_job_build_relation_table = CREATE TABLE FINGERPRINT_JOB_BUILD_RELATION \
  (FINGERPRINT_ID VARCHAR(50)    NOT NULL, \
   INSTANCE_ID    VARCHAR(50)    NOT NULL, \
   JOB            VARCHAR(50)    NOT NULL, \
   BUILD          INT            NOT NULL, \
   IS_ORIGINAL    BOOLEAN        NOT NULL, \
   ID             SERIAL         PRIMARY KEY);

create_fingerprint_facet_relation_table = CREATE TABLE FINGERPRINT_FACET_RELATION \
  (FINGERPRINT_ID VARCHAR(50)    NOT NULL, \
   INSTANCE_ID    VARCHAR(50)    NOT NULL, \
   FACET          VARCHAR(50)    NOT NULL, \
   ID             SERIAL         PRIMARY KEY);

insert_fingerprint = INSERT INTO FINGERPRINT \
  (FINGERPRINT_ID, INSTANCE_ID, TIMESTAMP, FILENAME) \
  VALUES (?, ? , ?, ?);

insert_fingerprint_job_build_relation = INSERT INTO FINGERPRINT_JOB_BUILD_RELATION \
  (FINGERPRINT_ID, INSTANCE_ID, JOB, BUILD, IS_ORIGINAL) \
  VALUES (?, ?, ?, ?, ?);

select_fingerprint = SELECT TIMESTAMP, FILENAME FROM FINGERPRINT \
  WHERE FINGERPRINT_ID = ? AND INSTANCE_ID = ?;

select_fingerprint_job_build_relation = SELECT JOB, BUILD FROM FINGERPRINT_JOB_BUILD_RELATION \
  WHERE FINGERPRINT_ID = ? AND INSTANCE_ID = ?;

select_fingerprint_exists_for_instance = SELECT EXISTS (SELECT 1 FROM FINGERPRINT WHERE INSTANCE_ID = ?);

delete_fingerprint = DELETE FROM FINGERPRINT \
  WHERE FINGERPRINT_ID = ? AND INSTANCE_ID = ?;

delete_fingerprint_job_build_relation = DELETE FROM FINGERPRINT_JOB_BUILD_RELATION \
  WHERE FINGERPRINT_ID = ? AND INSTANCE_ID = ?;
